
PipelineGridSearchCV
====================
An optimzed version of GridSearchCV and Pipeline that
avoids unnecessary calls to fit()/transform() by doing grid search in
depth first search (DFS) order.

Motivation
==========
Running GridSearchCV on a Pipeline classifier will cause
a full pipeline computation for each set of parameters,
despite some parameters being the same as before,
causing unnecessary calls to fit/transform.

Doing 5-fold CV using GridSearchCV on a Pipeline will
cause prod(param_counts)*pipe_length*5+pipe_length calls to fit(),
where pipe_length is the length of the pipeline.

PipelineGridSearchCV, on the other hand, requires only the optimal
(nverts-1)*5+pipe_length calls to fit(),
where nverts is the number of vertices in the pipeline parameter call
tree.

<plot here>

Usage
=====
    from sklearn.datasets import make_classification
    from sklearn.decomposition import PCA
    from sklearn.pipeline import Pipeline
    from sklearn.svm import SVC

    from pipeline_grid_search import PipelineGridSearchCV

    pipe = Pipeline([
        ("pca", PCA()),
        ("svm", SVC()),
        ])

    cv_params = dict([
        ('pca__n_components', [100,200,300]),
        ('svm__C', [1,10,100,1000]),
    ])

    X, y = make_classification(n_samples=1000, n_features=1000)

    n_folds = 5
    n_jobs = 1

    model = PipelineGridSearchCV(pipe, cv_params, cv=n_folds, verbose=1, n_jobs=n_jobs)
    model.fit(X,y) # This will run much faster than ordinary GridSearchCV

Tests
=====
Make sure that everything is working correctly by running the test suite:
$ nosetests .
